kind: Service
apiVersion: v1
metadata:
  name: proxy-admin
  labels:
    name: nginx
    role: ssl-proxy
    app: admin
  annotations:
    service.beta.kubernetes.io/external-traffic: "OnlyLocal"
spec:
  ports:
  - name: https
    port: 443
    targetPort: ssl-proxy-https
    protocol: TCP
  - name: http
    port: 80
    targetPort: ssl-proxy-http
    protocol: TCP
  selector:
    name: nginx
    role: ssl-proxy
    app: admin
  type: LoadBalancer
---
kind: ReplicationController
apiVersion: v1
metadata:
  name: proxy-admin
  labels:
    name: nginx
    role: ssl-proxy
    app: admin
spec:
  replicas: 1
  selector:
    name: nginx
    role: ssl-proxy
    app: admin
  template:
    metadata:
      name: proxy-admin
      labels:
        name: nginx
        role: ssl-proxy
        app: admin
    spec:
      containers:
      - name: nginx-ssl-proxy
        image: dainisl/nginx-ssl-proxy:latest
        imagePullPolicy: Always
        env:
        - name: SERVICE_HOST_ENV_NAME
          value: ADMIN_SERVICE_HOST
        - name: SERVICE_PORT_ENV_NAME
          value: ADMIN_SERVICE_PORT
        - name: ENABLE_SSL
          value: 'true'
        ports:
        - name: ssl-proxy-http
          containerPort: 80
        - name: ssl-proxy-https
          containerPort: 443
        volumeMounts:
        - name: ssl-proxy-secret
          mountPath: /etc/secrets
          readOnly: true
      volumes:
      - name: ssl-proxy-secret
        secret:
          secretName: ssl-proxy-secret
---
apiVersion: v1
data:
  proxycert: ''
  dhparam: 'LS0tLS1CRUdJTiBESCBQQVJBTUVURVJTLS0tLS0KTUlJQkNBS0NBUUVBdVpxZUtSRUdhOUhOMTZYV2szMnpiL3B1UjJuUW8zZmtXbmExVmsvNVhpcFBKYXdobS9hWgpCUlZuSE5KZ1BEdzhwMElUT0JpeGdtVXlYdmdtb0tOUm9Oa1NMZkpoWXl1VzBGdUNVNklQcVFLeGMxRnlYSEJRClRkMnd2V1pKb1d2RGNRSmFJSktOZFAzd3RrNXR6UFY1ZEUwNnl2ajc1bTZkdmlINkpIdlZSQXl4YUhDL3lzRzUKeTlsMWh5Z2tadFlCYVNjRTlHUHNJUGRxclNRQmxGTjNRdHk0T3FaVXVQYVUvOUx6MGNBc2lkMU9DRjR5NnlFMQpoREFjbXI2V0tFZndQa3ZpVWpGbkg5SFEyRDZHa0N0Wk9zZVUxMTVCR0hHblp1MTllakZwSzB2YWJnb1d5SFpOCjk4WkV4ZkJNM1cveEJJTUxORnE0R2cxaHc1RFowMVhuWXdJQkFnPT0KLS0tLS1FTkQgREggUEFSQU1FVEVSUy0tLS0tCg=='
  proxykey: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tTUlJRXZRSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS2N3Z2dTakFnRUFBb0lCQVFDOVR0UU15ZHdZMWlXU3NJOVpqeDZTTU5QUGdzeVVMWGdnS2FEaEFrNVhtenh0Y0QrYVBzR3lVNEs5anlMOHJGR0g1Sko5aWRTWHNvczcxSmRncld3NUwyYjFiTDN3WlhDVktKV0tuOWY3elFlZTc4TU4wWjFVRWN3WDJaaUhNcVJrNFNEUWhMMjBpVTdwMTlUbjhtWno3QzFEUjFtaDQ3clRDWVNFQStBNFd4U21yMkxJRnFwckVGR0RhNWlvNVJYVEdXRUE0bWd6WXNNcWwrZUtBUEF2eW42WXg2V1l6TG03VVR0ZTlNN3dXemZ6Wmp1QnVVNXZwSFo5Tm0yYmFnYlZPbC9EUmdhbVkxVHd1STljaU9odTdJei9ZSHdiR3ZYeUFZaFpLRTB6NUMxZXFYKzRwd1V4YkcxMWhuWWp5bTk2QzM0NmUvdXdNb3N5anNvVldTdDdBZ01CQUFFQ2dnRUFmbC92UXhKR2NmWVRZeGVtdXB6R1JjVit3SnFLdzZpTzlybVRnbUl0dG1JVk51R21NK3dORm1TVmRNSG5FMUpkb3lBOWdyek9STzZWOER6OVNUYThkbmhrZlJZNHZoQ1oxWmtnSzBpRndMeWdoOE43TFBCdjNMMTh4N2NsRWF3Ry9xa2paTkFZYkRyMWlUbmlFVzFLWTd5WWdyOVE0TGZMOGpINldyN1RvZ3BWU1NPNUM4bkpqTWptRUMyZWszOFU2bDV0c1FNL1ZkUStvYXR5b1oyK3BoTWdGYkNJbUllb1NrUWw1SlBlbGZqMDhBbkhsNFlyNDVqNnRMSzJVVDN3MEJYK2JFSC83ZGRJVlVHSjdPamZTQUttR214UTg3U3kwRlhkdjRtUEFjM2NkQ2h2ek1GK091VXV1dmpieHhKMTJ1bnlQYU96alR6UGFBOUFkaCt0QVFLQmdRRG1QVWc1QTdKall5RUg2K3NHR3pRbmdiZ3ZxZ1lCcUpId3MxYjdRSU9PdVkvdUhRaklNKy9MZU1CR1RkZFZuVzZKU0F6eDZsZHY1eXU1Y25CQ1JDN2lEdU1RTXBETjFyZFh4VDRFdDh5dy9VbEpFQi93SFVMTjNnYmE5NThGZkR3RGhtM2JpdFFmQndyYzZ1ODhkZDUvSWlYK0ZreDlnQ0o1RzFZK3Ayekt3UUtCZ1FEU2ZTYkkzcy9Yb001M3V0akN3MEhTVSs5SjJTMnZ3cjhCOTk0WE1mbjl2aXJrc1Q5V1RUdkVEMW9hNWQvYy80SmVRODgxSm9oMC80SU5XVmE2ajRJdy9nMjdZZGpoSW1ScHl1aE90ZVlObk50WVJKTkJMTkpaVVU5VjB0N3JJTTFPaTNJQVYvNU1tUy9zWEcvak94U0IyVC9VQWFhVi8yQjBMZEN6djlleE93S0JnUUNmVzlGT2JTbWVzdkVjMjRUTHNDNlVIYXdQaVo0b3JiVjlwWlBSeWVDRS9Ca01GWnFMZjY4ODVUSW9OeDZSU3F0RVo5TlY2ZjVsSE50ZHUwREtEUWxxUENXYmczUklsSkpJTk9SdFBZNTIvb2tvQWZvcEp3ZWpHRWNrYmZucVFRZ0U1Sm5MT0RjRDFzc0ZCN05ZNUxpQXhIRUpnZ09sWmZmMlhSNS90VUNPd1FLQmdIWkt6V1F3REFCenAvVVR0Y1BtOWZQZEplcUx1aWcvdXhiQkZUaFY1dGVhYXdLeE5oWXJPMzVZM2x1bGVxVDVsMnVna2krZG95eVZkNkpHNWYzY3J0OFh0K0hxQUhldDIxNjFJTTh6WE1HanVJV25yRllCZVltbXIzNWREdGgzUzhwcmhicjV1TG1Wa2FBMDV0QitJRzFGQ2FEOCtJRHR6MmdiWTJIUlc4ZUhBb0dBQVE3SUZ5bVg2QWplWmk4VDQrYTN4OTFzcUJvVHEyUmU3SExXSnB6cWxNUThiVit1dWpYZnNMbUNxeC90VVk4ZXlqYVN3TWROcm1uRERDV2gwMkU0YzFjQWV3OG5QeVNOZ1p0NGtndE9ZdXRhQXpOcHZZelRId1VsRExha0htK3M4aTdyVGFhTWx2d01Vd1lJcTU3VFNaSEo1NHhpRWV4eU80U3JCcGplNFNRPS0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0='
kind: Secret
metadata:
  name: ssl-proxy-secret
type: Opaque
