kind: Service
apiVersion: v1
metadata:
  name: proxy-admin
  labels:
    name: nginx
    role: ssl-proxy
    app: admin
  annotations:
    service.beta.kubernetes.io/external-traffic: "OnlyLocal"
spec:
  ports:
  - name: https
    port: 443
    targetPort: ssl-proxy-https
    protocol: TCP
  - name: http
    port: 80
    targetPort: ssl-proxy-http
    protocol: TCP
  selector:
    name: nginx
    role: ssl-proxy
    app: admin
  type: LoadBalancer
---
kind: ReplicationController
apiVersion: v1
metadata:
  name: proxy-admin
  labels:
    name: nginx
    role: ssl-proxy
    app: admin
spec:
  replicas: 1
  selector:
    name: nginx
    role: ssl-proxy
    app: admin
  template:
    metadata:
      name: proxy-admin
      labels:
        name: nginx
        role: ssl-proxy
        app: admin
    spec:
      containers:
      - name: nginx-ssl-proxy
        image: dainisl/nginx-ssl-proxy:latest
        imagePullPolicy: Always
        env:
        - name: SERVICE_HOST_ENV_NAME
          value: ADMIN_SERVICE_HOST
        - name: SERVICE_PORT_ENV_NAME
          value: ADMIN_SERVICE_PORT
        - name: ENABLE_SSL
          value: 'true'
        ports:
        - name: ssl-proxy-http
          containerPort: 80
        - name: ssl-proxy-https
          containerPort: 443
        volumeMounts:
        - name: ssl-proxy-secret
          mountPath: /etc/secrets
          readOnly: true
      volumes:
      - name: ssl-proxy-secret
        secret:
          secretName: ssl-proxy-secret
---
apiVersion: v1
data:
  proxycert: ''
  dhparam: 'LS0tLS1CRUdJTiBESCBQQVJBTUVURVJTLS0tLS0KTUlJQkNBS0NBUUVBdVpxZUtSRUdhOUhOMTZYV2szMnpiL3B1UjJuUW8zZmtXbmExVmsvNVhpcFBKYXdobS9hWgpCUlZuSE5KZ1BEdzhwMElUT0JpeGdtVXlYdmdtb0tOUm9Oa1NMZkpoWXl1VzBGdUNVNklQcVFLeGMxRnlYSEJRClRkMnd2V1pKb1d2RGNRSmFJSktOZFAzd3RrNXR6UFY1ZEUwNnl2ajc1bTZkdmlINkpIdlZSQXl4YUhDL3lzRzUKeTlsMWh5Z2tadFlCYVNjRTlHUHNJUGRxclNRQmxGTjNRdHk0T3FaVXVQYVUvOUx6MGNBc2lkMU9DRjR5NnlFMQpoREFjbXI2V0tFZndQa3ZpVWpGbkg5SFEyRDZHa0N0Wk9zZVUxMTVCR0hHblp1MTllakZwSzB2YWJnb1d5SFpOCjk4WkV4ZkJNM1cveEJJTUxORnE0R2cxaHc1RFowMVhuWXdJQkFnPT0KLS0tLS1FTkQgREggUEFSQU1FVEVSUy0tLS0tCg=='
  proxykey: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQzlUdFFNeWR3WTFpV1MKc0k5Wmp4NlNNTlBQZ3N5VUxYZ2dLYURoQWs1WG16eHRjRCthUHNHeVU0SzlqeUw4ckZHSDVKSjlpZFNYc29zNwoxSmRncld3NUwyYjFiTDN3WlhDVktKV0tuOWY3elFlZTc4TU4wWjFVRWN3WDJaaUhNcVJrNFNEUWhMMjBpVTdwCjE5VG44bVp6N0MxRFIxbWg0N3JUQ1lTRUErQTRXeFNtcjJMSUZxcHJFRkdEYTVpbzVSWFRHV0VBNG1nellzTXEKbCtlS0FQQXZ5bjZZeDZXWXpMbTdVVHRlOU03d1d6ZnpaanVCdVU1dnBIWjlObTJiYWdiVk9sL0RSZ2FtWTFUdwp1STljaU9odTdJei9ZSHdiR3ZYeUFZaFpLRTB6NUMxZXFYKzRwd1V4YkcxMWhuWWp5bTk2QzM0NmUvdXdNb3N5Cmpzb1ZXU3Q3QWdNQkFBRUNnZ0VBZmwvdlF4SkdjZllUWXhlbXVwekdSY1Yrd0pxS3c2aU85cm1UZ21JdHRtSVYKTnVHbU0rd05GbVNWZE1IbkUxSmRveUE5Z3J6T1JPNlY4RHo5U1RhOGRuaGtmUlk0dmhDWjFaa2dLMGlGd0x5ZwpoOE43TFBCdjNMMTh4N2NsRWF3Ry9xa2paTkFZYkRyMWlUbmlFVzFLWTd5WWdyOVE0TGZMOGpINldyN1RvZ3BWClNTTzVDOG5Kak1qbUVDMmVrMzhVNmw1dHNRTS9WZFErb2F0eW9aMitwaE1nRmJDSW1JZW9Ta1FsNUpQZWxmajAKOEFuSGw0WXI0NWo2dExLMlVUM3cwQlgrYkVILzdkZElWVUdKN09qZlNBS21HbXhRODdTeTBGWGR2NG1QQWMzYwpkQ2h2ek1GK091VXV1dmpieHhKMTJ1bnlQYU96alR6UGFBOUFkaCt0QVFLQmdRRG1QVWc1QTdKall5RUg2K3NHCkd6UW5nYmd2cWdZQnFKSHdzMWI3UUlPT3VZL3VIUWpJTSsvTGVNQkdUZGRWblc2SlNBeng2bGR2NXl1NWNuQkMKUkM3aUR1TVFNcEROMXJkWHhUNEV0OHl3L1VsSkVCL3dIVUxOM2diYTk1OEZmRHdEaG0zYml0UWZCd3JjNnU4OApkZDUvSWlYK0ZreDlnQ0o1RzFZK3Ayekt3UUtCZ1FEU2ZTYkkzcy9Yb001M3V0akN3MEhTVSs5SjJTMnZ3cjhCCjk5NFhNZm45dmlya3NUOVdUVHZFRDFvYTVkL2MvNEplUTg4MUpvaDAvNElOV1ZhNmo0SXcvZzI3WWRqaEltUnAKeXVoT3RlWU5uTnRZUkpOQkxOSlpVVTlWMHQ3cklNMU9pM0lBVi81TW1TL3NYRy9qT3hTQjJUL1VBYWFWLzJCMApMZEN6djlleE93S0JnUUNmVzlGT2JTbWVzdkVjMjRUTHNDNlVIYXdQaVo0b3JiVjlwWlBSeWVDRS9Ca01GWnFMCmY2ODg1VElvTng2UlNxdEVaOU5WNmY1bEhOdGR1MERLRFFscVBDV2JnM1JJbEpKSU5PUnRQWTUyL29rb0Fmb3AKSndlakdFY2tiZm5xUVFnRTVKbkxPRGNEMXNzRkI3Tlk1TGlBeEhFSmdnT2xaZmYyWFI1L3RVQ093UUtCZ0haSwp6V1F3REFCenAvVVR0Y1BtOWZQZEplcUx1aWcvdXhiQkZUaFY1dGVhYXdLeE5oWXJPMzVZM2x1bGVxVDVsMnVnCmtpK2RveXlWZDZKRzVmM2NydDhYdCtIcUFIZXQyMTYxSU04elhNR2p1SVduckZZQmVZbW1yMzVkRHRoM1M4cHIKaGJyNXVMbVZrYUEwNXRCK0lHMUZDYUQ4K0lEdHoyZ2JZMkhSVzhlSEFvR0FBUTdJRnltWDZBamVaaThUNCthMwp4OTFzcUJvVHEyUmU3SExXSnB6cWxNUThiVit1dWpYZnNMbUNxeC90VVk4ZXlqYVN3TWROcm1uRERDV2gwMkU0CmMxY0FldzhuUHlTTmdadDRrZ3RPWXV0YUF6TnB2WXpUSHdVbERMYWtIbStzOGk3clRhYU1sdndNVXdZSXE1N1QKU1pISjU0eGlFZXh5TzRTckJwamU0U1E9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'
kind: Secret
metadata:
  name: ssl-proxy-secret
type: Opaque
