kind: Service
apiVersion: v1
metadata:
  name: proxy-admin
  labels:
    name: nginx
    role: ssl-proxy
    app: admin
  annotations:
    service.beta.kubernetes.io/external-traffic: "OnlyLocal"
spec:
  ports:
  - name: https
    port: 443
    targetPort: ssl-proxy-https
    protocol: TCP
  - name: http
    port: 80
    targetPort: ssl-proxy-http
    protocol: TCP
  selector:
    name: nginx
    role: ssl-proxy
    app: admin
  type: LoadBalancer
---
kind: ReplicationController
apiVersion: v1
metadata:
  name: proxy-admin
  labels:
    name: nginx
    role: ssl-proxy
    app: admin
spec:
  replicas: 1
  selector:
    name: nginx
    role: ssl-proxy
    app: admin
  template:
    metadata:
      name: proxy-admin
      labels:
        name: nginx
        role: ssl-proxy
        app: admin
    spec:
      containers:
      - name: nginx-ssl-proxy
        image: dainisl/nginx-ssl-proxy:latest
        imagePullPolicy: Always
        env:
        - name: SERVICE_HOST_ENV_NAME
          value: ADMIN_SERVICE_HOST
        - name: SERVICE_PORT_ENV_NAME
          value: ADMIN_SERVICE_PORT
        - name: ENABLE_SSL
          value: 'true'
        ports:
        - name: ssl-proxy-http
          containerPort: 80
        - name: ssl-proxy-https
          containerPort: 443
        volumeMounts:
        - name: ssl-proxy-secret
          mountPath: /etc/secrets
          readOnly: true
      volumes:
      - name: ssl-proxy-secret
        secret:
          secretName: ssl-proxy-secret
---
apiVersion: v1
data:
  proxycert: ''
  dhparam: 'LS0tLS1CRUdJTkRIUEFSQU1FVEVSUy0tLS0tCk1JSUJDQUtDQVFFQTdsb3dOeWhGK204Z0VVeHFMeGlUTjdEQWdLMmZKRzhrSTJxeEhUS3JUVnlIT1p3aU1McEIKS0VxSG5sNDV0aWZxVXlMaVQ1T0hUV3ZLTVVFcEhkL1MxOWlIUFR2T3dzMi9lcjRERy9YcUdKRmtTSmV0WkwrbgpKQzdLUDEyR1RlNXRmbE5UQkNCQTFuZVdIckR6Ykl2YUNpWE5QMC85MFBkSW5FWldPMzJzbVUxSGdPRHJzSEhyClJTczlOeHNLMEhQd1hPYWVGaUY5TXpJd0E1STVDRUtOZm9DR1VNQWRSdndENnhyOVlhOWRQL0l4WFdFdlZQM0UKenk2SmV3blg0KzNhSjNWZDFBS0NsVkZkZFpJVjB5dmhXRm9CdEJ0ZHBoUmxLRk1pWXBoYkhkbWV6ckdZcU5BYgpKdm5UK1Rud0lveCtFeFZzVWVCaWJpQUloZE1GdWgySUt3SUJBZz09Ci0tLS0tRU5EREhQQVJBTUVURVJTLS0tLS0K'
  proxykey: 'LS0tLS1CRUdJTlBSSVZBVEVLRVktLS0tLQpNSUlFdlFJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLY3dnZ1NqQWdFQUFvSUJBUUM5VHRRTXlkd1kxaVdTCnNJOVpqeDZTTU5QUGdzeVVMWGdnS2FEaEFrNVhtenh0Y0QrYVBzR3lVNEs5anlMOHJGR0g1Sko5aWRTWHNvczcKMUpkZ3JXdzVMMmIxYkwzd1pYQ1ZLSldLbjlmN3pRZWU3OE1OMFoxVUVjd1gyWmlITXFSazRTRFFoTDIwaVU3cAoxOVRuOG1aejdDMURSMW1oNDdyVENZU0VBK0E0V3hTbXIyTElGcXByRUZHRGE1aW81UlhUR1dFQTRtZ3pZc01xCmwrZUtBUEF2eW42WXg2V1l6TG03VVR0ZTlNN3dXemZ6Wmp1QnVVNXZwSFo5Tm0yYmFnYlZPbC9EUmdhbVkxVHcKdUk5Y2lPaHU3SXovWUh3Ykd2WHlBWWhaS0UwejVDMWVxWCs0cHdVeGJHMTFobllqeW05NkMzNDZlL3V3TW9zeQpqc29WV1N0N0FnTUJBQUVDZ2dFQWZsL3ZReEpHY2ZZVFl4ZW11cHpHUmNWK3dKcUt3NmlPOXJtVGdtSXR0bUlWCk51R21NK3dORm1TVmRNSG5FMUpkb3lBOWdyek9STzZWOER6OVNUYThkbmhrZlJZNHZoQ1oxWmtnSzBpRndMeWcKaDhON0xQQnYzTDE4eDdjbEVhd0cvcWtqWk5BWWJEcjFpVG5pRVcxS1k3eVlncjlRNExmTDhqSDZXcjdUb2dwVgpTU081QzhuSmpNam1FQzJlazM4VTZsNXRzUU0vVmRRK29hdHlvWjIrcGhNZ0ZiQ0ltSWVvU2tRbDVKUGVsZmowCjhBbkhsNFlyNDVqNnRMSzJVVDN3MEJYK2JFSC83ZGRJVlVHSjdPamZTQUttR214UTg3U3kwRlhkdjRtUEFjM2MKZENodnpNRitPdVV1dXZqYnh4SjEydW55UGFPempUelBhQTlBZGgrdEFRS0JnUURtUFVnNUE3SmpZeUVINitzRwpHelFuZ2JndnFnWUJxSkh3czFiN1FJT091WS91SFFqSU0rL0xlTUJHVGRkVm5XNkpTQXp4NmxkdjV5dTVjbkJDClJDN2lEdU1RTXBETjFyZFh4VDRFdDh5dy9VbEpFQi93SFVMTjNnYmE5NThGZkR3RGhtM2JpdFFmQndyYzZ1ODgKZGQ1L0lpWCtGa3g5Z0NKNUcxWStwMnpLd1FLQmdRRFNmU2JJM3MvWG9NNTN1dGpDdzBIU1UrOUoyUzJ2d3I4Qgo5OTRYTWZuOXZpcmtzVDlXVFR2RUQxb2E1ZC9jLzRKZVE4ODFKb2gwLzRJTldWYTZqNEl3L2cyN1lkamhJbVJwCnl1aE90ZVlObk50WVJKTkJMTkpaVVU5VjB0N3JJTTFPaTNJQVYvNU1tUy9zWEcvak94U0IyVC9VQWFhVi8yQjAKTGRDenY5ZXhPd0tCZ1FDZlc5Rk9iU21lc3ZFYzI0VExzQzZVSGF3UGlaNG9yYlY5cFpQUnllQ0UvQmtNRlpxTApmNjg4NVRJb054NlJTcXRFWjlOVjZmNWxITnRkdTBES0RRbHFQQ1diZzNSSWxKSklOT1J0UFk1Mi9va29BZm9wCkp3ZWpHRWNrYmZucVFRZ0U1Sm5MT0RjRDFzc0ZCN05ZNUxpQXhIRUpnZ09sWmZmMlhSNS90VUNPd1FLQmdIWksKeldRd0RBQnpwL1VUdGNQbTlmUGRKZXFMdWlnL3V4YkJGVGhWNXRlYWF3S3hOaFlyTzM1WTNsdWxlcVQ1bDJ1ZwpraStkb3l5VmQ2Skc1ZjNjcnQ4WHQrSHFBSGV0MjE2MUlNOHpYTUdqdUlXbnJGWUJlWW1tcjM1ZER0aDNTOHByCmhicjV1TG1Wa2FBMDV0QitJRzFGQ2FEOCtJRHR6MmdiWTJIUlc4ZUhBb0dBQVE3SUZ5bVg2QWplWmk4VDQrYTMKeDkxc3FCb1RxMlJlN0hMV0pwenFsTVE4YlYrdXVqWGZzTG1DcXgvdFVZOGV5amFTd01kTnJtbkREQ1doMDJFNApjMWNBZXc4blB5U05nWnQ0a2d0T1l1dGFBek5wdll6VEh3VWxETGFrSG0rczhpN3JUYWFNbHZ3TVV3WUlxNTdUClNaSEo1NHhpRWV4eU80U3JCcGplNFNRPQotLS0tLUVORFBSSVZBVEVLRVktLS0tLQo='
kind: Secret
metadata:
  name: ssl-proxy-secret
type: Opaque
